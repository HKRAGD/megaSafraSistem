const mongoose = require('mongoose');
const reportService = require('../src/services/reportService');

// Conectar ao MongoDB
mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/sistema-sementes-test', {
  useNewUrlParser: true,
  useUnifiedTopology: true
});

async function testReports() {
  try {
    console.log('üß™ === TESTE DOS RELAT√ìRIOS ===');
    
    // 1. Teste do relat√≥rio de invent√°rio
    console.log('\nüì¶ Testando relat√≥rio de invent√°rio...');
    const inventoryReport = await reportService.generateInventoryReport();
    console.log('‚úÖ Relat√≥rio de invent√°rio gerado:');
    console.log('   - Total de produtos:', inventoryReport.data.summary.totalProducts);
    console.log('   - Peso total:', inventoryReport.data.summary.totalWeight, 'kg');
    console.log('   - Localiza√ß√µes ocupadas:', inventoryReport.data.summary.locationsOccupied);
    console.log('   - Total de localiza√ß√µes:', inventoryReport.data.summary.totalLocations);
    console.log('   - Taxa de ocupa√ß√£o:', inventoryReport.data.summary.occupancyRate, '%');
    
    // 2. Teste do relat√≥rio de movimenta√ß√µes
    console.log('\nüìù Testando relat√≥rio de movimenta√ß√µes...');
    const movementReport = await reportService.generateMovementReport();
    console.log('‚úÖ Relat√≥rio de movimenta√ß√µes gerado:');
    console.log('   - Total de movimenta√ß√µes:', movementReport.data.summary.totalMovements);
    console.log('   - Distribui√ß√£o por tipo:', movementReport.data.summary.typeDistribution);
    
    // 3. Teste do relat√≥rio de vencimentos
    console.log('\n‚è∞ Testando relat√≥rio de vencimentos...');
    const expirationReport = await reportService.generateExpirationReport();
    console.log('‚úÖ Relat√≥rio de vencimentos gerado:');
    console.log('   - Produtos expirando:', expirationReport.data.summary.totalExpiring);
    console.log('   - Produtos vencidos:', expirationReport.data.summary.totalExpired);
    
    // 4. Teste do relat√≥rio executivo
    console.log('\nüìä Testando relat√≥rio executivo...');
    const executiveReport = await reportService.generateExecutiveDashboard();
    console.log('‚úÖ Relat√≥rio executivo gerado:');
    console.log('   - KPIs:', executiveReport.data.kpis);
    
  } catch (error) {
    console.error('‚ùå Erro ao testar relat√≥rios:', error.message);
  } finally {
    mongoose.connection.close();
  }
}

testReports(); 